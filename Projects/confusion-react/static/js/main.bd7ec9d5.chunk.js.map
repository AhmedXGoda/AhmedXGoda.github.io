{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promotionsLoading","promotionsErrMess","leader","leadersLoading","leadersErrMess","required","val","length","minLength","len","minLengthName","validName","maxLengthName","maxLength","minLengthMessage","test","validEmail","exactLengthTel","validTel","exactLength","invalidNameInput","invalidTelInput","invalidEmailInput","invalidMessageInput","Contact","handleSubmit","values","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","inputs","document","querySelectorAll","i","classList","remove","handleBlur","func","element","value","add","this","div","initial","x","animate","exit","transition","ease","Breadcrumb","BreadcrumbItem","to","active","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","placeholder","validators","onBlur","querySelector","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderLeader","key","Media","tag","left","middle","object","body","heading","About","leaders","map","LeadersResult","CardHeader","title","list","Header","toggleNav","setState","isNavOpen","state","toggleModal","isModalOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","field","evt","touched","validate","errors","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","height","width","Collapse","isOpen","navbar","Nav","NavItem","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","valid","undefined","invalid","innerRef","input","FormFeedback","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","CommentForm","postComment","dishId","rating","author","comment","handleFocus","handleChange","minLengthComment","validComment","invalidCommentInput","onChange","onFocus","React","RenderDish","RenderComments","comments","COMMENT","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Footer","addDishes","payload","dishesFailed","addComments","commentsFailed","promosLoading","addPromos","promotions","promosFailed","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","path","component","filter","featured","promo","exact","match","parseInt","params","commentsLoading","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","resopnse","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd7ec9d5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fas fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n}","export const baseUrl = \"https://ahmedxgoda.github.io/Projects/confusion-react/\";","import React from 'react';\nimport { Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle } from 'reactstrap'\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    } else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    } else {\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promotionsLoading}\n                        errMess={props.promotionsErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Form, Control, Errors} from 'react-redux-form';\nimport { motion } from 'framer-motion';\nimport { Loading } from './LoadingComponent';\n\n// For all inputs\nconst required = (val) => val && val.length;\n// For the name and message\nconst minLength = (val, len) => val && (val.length >= len);\n// For the name\nconst minLengthName = (val) => (!required(val) || !validName(val)) || minLength(val, 3);\n// For the name\nconst maxLength = (val, len) => !(val) || (val.length < len)\nconst maxLengthName = (val) => (!required(val) || !validName(val)) || maxLength(val, 8);\n// For the message\nconst minLengthMessage = (val) => !required(val) || minLength(val, 100);\n// Name Validation\nconst validName = (val) => !required(val) || /^[A-Z]+$/i.test(val);\n// Email Validation\nconst validEmail = (val) => !required(val) || (/^([A-Z0-9._-]+)@([A-Z0-9_.-]+)\\.([A-Z]{2,4})$/i.test(val) && !/\\.\\./.test(val) && !/@\\./.test(val) && !/\\.@/.test(val) && !/@-/.test(val) && !/@_/.test(val) && !/-@/.test(val) && !/_@/.test(val) && !/\\.-/.test(val) && !/\\._/.test(val) && !/-\\./.test(val) && !/_\\./.test(val));\n// For tel.number\nconst exactLength = (val, len) => val && (val.length === len);\nconst exactLengthTel = (val) => (!required(val) || !validTel(val)) || exactLength(val, 10);\n// Tel. Number validation\nconst validTel = (val) => !required(val) || /^\\d+$/i.test(val);\n\n// Check if the input is invalid to add bootstrap classes to it\nconst invalidNameInput = (val) => !required(val) || !minLengthName(val) || !maxLengthName(val) || !validName(val);\nconst invalidTelInput = (val) => !required(val) || !validTel(val) || !exactLengthTel(val)\nconst invalidEmailInput = (val) => !required(val) || !validEmail(val);\nconst invalidMessageInput = (val) => !required(val) || !minLengthMessage(val);\n\nclass Contact extends Component {\n    \n    handleSubmit = (values) => {\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        const inputs = document.querySelectorAll('input, textarea');\n        for (let i of inputs) {\n            // i.value = '';\n            i.classList.remove('is-valid');\n            i.classList.remove('is-invalid');\n        }\n    }\n    handleBlur = (func, element) => {\n        const val = element.value;\n        if (func(val)) element.classList.add('is-invalid');\n        else {\n            element.classList.remove('is-invalid')\n            element.classList.add('is-valid')\n        };\n    }\n    render() {\n        if (this.props.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        } else {\n            return(\n                <motion.div initial={{x: '-100%'}} animate={{x: '0'}} exit={{x: '-100%'}} transition={{ease: \"easeInOut\"}} className=\"container\">\n                        <div className=\"row\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </Breadcrumb>\n                            <div className=\"col-12\">\n                                <h4>Contact Us</h4>\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"row row-content\">\n                            <div className=\"col-12\">\n                            <h3>Location Information</h3>\n                            </div>\n                            <div className=\"col-12 col-sm-4 offset-sm-1\">\n                                    <h5>Our Address</h5>\n                                    <address>\n                                    121, Clear Water Bay Road<br />\n                                    Clear Water Bay, Kowloon<br />\n                                    HONG KONG<br />\n                                    <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                                    <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                                    <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                                    </address>\n                            </div>\n                            <div className=\"col-12 col-sm-6 offset-sm-1\">\n                                <h5>Map of our Location</h5>\n                            </div>\n                            <div className=\"col-12 col-sm-11 offset-sm-1\">\n                                <div className=\"btn-group\" role=\"group\">\n                                    <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                                    {/*eslint-disable-next-line*/}\n                                    <a role=\"button\" className=\"btn btn-info\"><i className=\"fab fa-skype\"></i> Skype</a>\n                                    <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"far fa-envelope\"></i> Email</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row row-content\">\n                            <div className=\"col-12\">\n                                <h3>Send us Your Feedback</h3>\n                            </div>\n                            <div className=\"col-12 col-md-9\">\n                                <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".firstname\" className=\"form-control\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"\n                                            validators={{\n                                                required, minLengthName, maxLengthName, validName\n                                            }} \n                                            onBlur={() => {\n                                                const element = document.querySelector('#firstname');\n                                                this.handleBlur(invalidNameInput, element);\n                                            }} />\n                                            <Errors className=\"text-danger\"\n                                                model=\".firstname\"\n                                                show='touched'\n                                                messages={{\n                                                    required: 'Required*',\n                                                    minLengthName: 'First name should be at least 3 characters',\n                                                    maxLengthName: 'First name should be 8 characters or less',\n                                                    validName: 'Name is invalid'\n                                                }}\n                                                    />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\"\n                                            validators={{\n                                                required, minLengthName, maxLengthName, validName\n                                            }}\n                                            onBlur={() => {\n                                                const element = document.querySelector('#lastname');\n                                                this.handleBlur(invalidNameInput, element);\n                                            }} />\n                                            <Errors className=\"text-danger\"\n                                                model=\".lastname\"\n                                                show='touched'\n                                                messages={{\n                                                    required: 'Required*',\n                                                    minLengthName: 'Last name should be at least 3 characters',\n                                                    maxLengthName: 'Last name shold be 8 characters or less',\n                                                    validName: 'Name is invalid'\n                                                }} />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel.\"\n                                            className=\"form-control\"\n                                            onBlur={() => {\n                                                const element = document.querySelector('#telnum');\n                                                this.handleBlur(invalidTelInput, element);\n                                            }}\n                                            validators={{\n                                                required, exactLengthTel,\n                                                validTel\n                                            }}  />\n                                            <Errors className=\"text-danger\"\n                                                model=\".telnum\"\n                                                show='touched'\n                                                messages={{\n                                                    required: 'Required* ',\n                                                    exactLengthTel: 'Tel. number should be 10 numbers\\n\\n',\n                                                    validTel: 'Tel. number should be numbers only'\n                                                }} />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"email\" md={2}>Email Address</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email Address\"\n                                            className=\"form-control\"\n                                            onBlur={() => {\n                                                const element = document.querySelector('#email');\n                                                this.handleBlur(invalidEmailInput, element);\n                                            }}\n                                            validators={{\n                                                required, validEmail\n                                            }}  />\n                                            <Errors className=\"text-danger\"\n                                                model=\".email\"\n                                                show='touched'\n                                                messages={{\n                                                    required: 'Required*',                    \n                                                    validEmail: 'Email Address is invalid'\n                                                }} />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Col md={{size: 6, offset: 2}}>\n                                            <div className=\"form-check\">\n                                                <Label check>\n                                                    <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\n                                                    <strong>May we contact you?</strong>\n                                                </Label>\n                                            </div>\n                                        </Col>\n                                        <Col md={{size: 3, offset: 1}}>\n                                            <Control.select model=\".contactType\" name=\"contactType\"\n                                            className=\"form-control\">\n                                                <option>Tel.</option>\n                                                <option>Email</option>\n                                            </Control.select>\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                        <Col md={10}>\n                                            <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\"\n                                            className=\"form-control\"\n                                            onBlur={() => {\n                                                const element = document.querySelector('#message');\n                                                this.handleBlur(invalidMessageInput, element);\n                                            }} \n                                            validators={{\n                                                required, minLengthMessage\n                                            }} />\n                                            <Errors className=\"text-danger\"\n                                                model=\".message\"\n                                                show='touched'\n                                                messages={{\n                                                    required: 'Required*',                    \n                                                    minLengthMessage: 'Your feedback should be at least 100 characters'\n                                                }} />\n                                        </Col>\n                                    </Row>\n                                    <Row className=\"form-group\">\n                                        <Col md={{size: 10, offset: 2}}>\n                                            <Button type=\"submit\" color=\"primary\">\n                                                Send Feedback\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </div>\n                        </div>\n                    </motion.div>\n            );\n        }                                     \n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Stagger, Fade } from 'react-animation-components';\nimport { motion } from 'framer-motion';\n\nfunction RenderLeader({leader}) {\n    return (     \n        <div key={leader.id} className=\"mt-5\">\n            <Media tag=\"li\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>                \n                <Media body className=\"ml-5\">\n                    <Media heading>{leader.name}</Media>                    \n                    <h5 className=\"mb-3 mt-3\">{leader.designation}</h5>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>   \n        </div>     \n    );\n}\n\nfunction About(props) {\n    const leaders = props.leaders.leaders.map(leader => (\n        <Fade in>\n            <RenderLeader leader={leader} />\n        </Fade>\n    ));\n    const LeadersResult = () => {\n        if (props.leaders.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        } else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        } else {\n            return(\n            <Stagger in>\n                {leaders}\n            </Stagger>\n            );\n        }\n    }\n        return(\n            <motion.div initial={{x: '-100%'}} animate={{x: '0'}} exit={{x: '-100%'}} transition={{ease: \"easeInOut\"}} className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            <LeadersResult />\n                        </Media>\n                    </div>\n                </div>\n            </motion.div>\n        );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem, NavbarToggler, Collapse, Jumbotron, Modal, ModalHeader, ModalBody, Form, FormGroup, Button, Label, Input, FormFeedback} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false,\n            touched: {\n                username: false,\n                password: false\n            }\n        }        \n    }\n\n    toggleNav = () => {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin = (event) => {\n        this.toggleModal();\n        alert(`Username: ${ this.username.value } Password: ${ this.password.value } Remember: ${ this.remember.checked }`)\n        event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        })\n    }\n\n    // Form validation\n    validate = (username, password) => {\n        \n        if(username !== null && password !== null) {\n            const errors = {\n                username: '',\n                password: ''\n            }\n            // Username validation\n            // Defining the Regular expression to do the job\n            const userReg = /^[a-zA-Z0-9_]+$/;\n            // If username is empty\n            if(this.state.touched.username && username.value === '') errors.username = 'Username should not be empty';\n            // If username is short\n            else if(this.state.touched.username && username.value.length <= 8) errors.username = 'Username should be at least 8 characters';\n            // If username is invailed\n            else if(this.state.touched.username && !userReg.test(username.value)) errors.username = 'Username should contain characters, numbers and _ only';\n                        \n            // Password Validation\n            // If password is empty\n            if(this.state.touched.password && password.value === '') errors.password = 'Password should not be empty';\n            // If password is short\n            else if(this.state.touched.password && password.value.length <= 8) errors.password = 'Password should be at least 8 characters';\n            // If password did not contain capital characters\n            else if(this.state.touched.password && !/[A-Z]/.test(password.value)) errors.password = 'Password should contain at least one capital character';\n            // If password did not contain small characters\n            else if(this.state.touched.password && !/[a-z]/.test(password.value)) errors.password = 'Password should contain at least one small character';\n            // If password did not contain numbers\n            else if(this.state.touched.password && !/[0-9]/.test(password.value)) errors.password = 'Password should contain numbers';\n            // Retrun the errors\n            return errors;\n        }\n    }\n\n    render() {\n        const errors = this.validate(this.username, this.password);\n        return(\n        <>\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\">\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fas fa-sign-in-alt\"></span> Login\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </div>\n            </Navbar>\n            <Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Ristorante Con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                            <Label htmlFor=\"username\">Username</Label>\n                            <Input type=\"text\" name=\"username\" id=\"username\"\n                            onBlur={this.handleBlur('username')}\n                            valid={errors !== undefined && this.state.touched.username ? errors.username === '' : null}\n                            invalid={errors !== undefined ? errors.username !== '' : null} \n                            innerRef={input => this.username = input} />\n                            <FormFeedback>{errors !== undefined ? errors.username : null}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"password\"\n                            onBlur={this.handleBlur('password')}\n                            valid={errors !== undefined && this.state.touched.password ? errors.password === '' : null}\n                            invalid={errors !== undefined ? errors.password !== '' : null}  \n                            innerRef={input => this.password = input} />\n                            <FormFeedback>{errors !== undefined ? errors.password : null}</FormFeedback>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"checkbox\" name=\"remember\" \n                                innerRef={input => this.remember = input} /> Remember me\n                            </Label>\n                        </FormGroup>\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </>\n        );\n    }\n}\nexport default Header;","import React from 'react'\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { motion } from 'framer-motion';\n\nfunction RenderMenuItem({dish}) {\n    return (\n        <Card key={dish.id}>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map(dish => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });    \n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    } else if (props.dishes.errMess) {\n        return (\n            <h4>{props.dishes.errMess}</h4>\n        );\n    }    \n    return (\n        <motion.div initial={{x: '-100%'}} animate={{x: '0'}} exit={{x: '-100%'}} transition={{ease: \"easeInOut\"}} className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h4>Menu</h4>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">                    \n                {menu}                    \n            </div>                \n        </motion.div>\n    );\n}\n        \n\nexport default Menu;","import React from 'react';\nimport { Card, CardBody, CardTitle, CardText, CardImg, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Row } from 'reactstrap';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport { motion } from 'framer-motion';\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isModalOpen: false\n        }\n    }\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    handleSubmit = (values) => {\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n        this.toggleModal();\n    }\n    handleFocus = (element) => {\n        if (element.value === '') element.classList.add('is-invalid')\n    }\n    handleChange = (func, element) => {\n        const val = element.value;\n        if (func(val)) element.classList.add('is-invalid');\n        else {\n            element.classList.remove('is-invalid')\n            element.classList.add('is-valid')\n        };\n    }\n    render() {\n        // For all inputs\n        const required = (val) => val && val.length;\n        // For the name and the comment\n        const minLength = (val, len) => val && (val.length >= len);\n        // For the name\n        const minLengthName = (val) => (!required(val) || !validName(val)) || minLength(val, 3);\n\n        // For the name\n        const maxLength = (val, len) => !(val) || (val.length < len)\n        const maxLengthName = (val) => (!required(val) || !validName(val)) || maxLength(val, 15);\n        const validName = (val) => !required(val) || (/^[A-Z ]+$/i.test(val));\n        // Specialy for comment\n        const minLengthComment = (val) => (!required(val) || !validComment(val)) || minLength(val, 15);\n        const validComment = (val) => !required(val) || (/^[A-Z!0-9 \\n]+$/i.test(val));\n        // Check if the input is invalid to add bootstrap classes to it\n        const invalidNameInput = (val) => !required(val) || !minLengthName(val) || !maxLengthName(val) || !validName(val);\n        const invalidCommentInput = (val) => !required(val) || !minLengthComment(val) || !validComment(val);\n        \n        return (\n            <>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <div className=\"container\">\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"rating\" name=\"rating\"> Rating</Label>\n                                    <Control.select className=\"form-control\" name=\"rating\" model=\".rating\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"author\" name=\"author\">Your Name</Label>\n                                    <Control.text className=\"form-control\" id=\"author\" name=\"author\" model=\".author\" \n                                    placeholder=\"Your Name\"\n                                    onChange={() => {\n                                        const element = document.querySelector('#author');\n                                        this.handleChange(invalidNameInput, element);\n                                        \n                                    }}\n                                    onFocus={() => {\n                                        const element = document.querySelector('#author');\n                                        this.handleFocus(element);\n                                    }}\n                                    validators={{\n                                        required, minLengthName, maxLengthName,\n                                        validName\n                                    }} />\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".author\"\n                                    messages={{\n                                        required: 'Required*',\n                                        minLengthName: 'Name should be greater than 3 characters',\n                                        maxLengthName: 'Name should be 15 characters or less',\n                                        validName: 'Name is invalid'\n                                    }} />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"comment\" name=\"comment\">Comment</Label>\n                                    <Control.textarea className=\"form-control\" name=\"comment\" id=\"comment\" model=\".comment\" rows=\"6\"\n                                    onChange={() => {\n                                        const element = document.querySelector('#comment');\n                                        this.handleChange(invalidCommentInput, element);\n                                        \n                                    }}\n                                    onFocus={() => {\n                                        const element = document.querySelector('#comment');\n                                        this.handleFocus(element);\n                                    }}\n                                    validators={{\n                                        required, minLengthComment,\n                                        validComment\n                                    }} />\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".comment\"\n                                    messages={{\n                                        required: 'Required*',\n                                        minLengthComment: 'Your comment should be at least 15 characters',\n                                        validComment: 'Your comment should not contain special characters like: ;, #, @, / and \\\\'\n                                    }} />\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\n                                </Row>\n                            </LocalForm>\n                        </div>\n                    </ModalBody>\n                </Modal>\n                <Button outline onClick={this.toggleModal}><span className=\"fas fa-pen\"></span> Submit a Comment</Button>\n            </>\n        );\n    }\n}\n\nfunction RenderDish({dish}) {                                \n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}>\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    );       \n}  \n\nfunction RenderComments({comments, postComment, dishId }) {        \n    const COMMENT = comments.map(comment => {\n        return (\n            <Fade in>\n                <div key={comment.id}>\n                    <ul className=\"list-unstyled\">\n                        <li>{comment.comment}</li>\n                        <br />\n                        <li>--{comment.author},{/* Converting to the required format */} {new Intl.DateTimeFormat('en-US', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: '2-digit'\n                    }).format(new Date(Date.parse(comment.date)))}</li>\n                    </ul>\n                </div>\n            </Fade>\n        );\n    });\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            <Stagger in>\n                {COMMENT}\n            </Stagger>\n            <CommentForm postComment={postComment} dishId={dishId} />            \n        </div>\n    );                             \n}  \n\nconst DishDetail = (props) => {  \n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    } else if (props.errMess) {\n        return (\n            <h4>{props.errMess}</h4>\n        );\n    } else if (props.dish != null) {\n        return (\n            <motion.div initial={{x: '-100%'}} animate={{x: '0'}} exit={{x: '-100%'}} transition={{ease: \"easeInOut\"}} className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h4>{props.dish.name}</h4>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">                    \n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments}\n                    dishId={props.dish.id}\n                    postComment={props.postComment} />\n                </div>\n            </motion.div>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n        \n}\n\nexport default DishDetail;","import React from 'react';\nimport { Link } from 'react-router-dom';\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fab fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fab fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fab fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fab fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fab fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"far fa-envelope\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n\n    newComment.date = new Date().toISOString();\n\n    fetch(baseUrl + 'comments.json', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok) return response;\n        else {\n            let error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        let errMess = new Error(error.message);\n        throw errMess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n        console.log(error.message);\n        alert(`Your comment could not be posted\\nError: ${error.message}`)\n    })\n}\n\nexport const fetchDishes = () => dispatch => {\n    dispatch(dishesLoading(true));\n    fetch(baseUrl + 'dishes.json')\n        .then(response => {\n            if (response.ok) return response;\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            let errMess = new Error(error.message);\n            throw errMess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const dishesFailed = (errMess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errMess\n});\n\nexport const fetchComments = () => dispatch => {\n    fetch(baseUrl + 'comments.json')\n        .then(response => {\n            if (response.ok) return response;\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            let errMess = new Error(error.message);\n            throw errMess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const commentsFailed = (errMess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const fetchPromos = () => dispatch => {\n    dispatch(promosLoading(true));\n    fetch(baseUrl + 'promotions.json')\n        .then(response => {\n            if (response.ok) return response;\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            let errMess = new Error(error.message);\n            throw errMess;\n        })\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromos(promotions)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const addPromos = promotions => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promotions\n});\n\nexport const promosFailed = (errMess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errMess\n});\n\nexport const fetchLeaders = () => dispatch => {\n    dispatch(leadersLoading(true));\n    fetch(baseUrl + 'leaders.json')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            let errMess = new Error(error.message);\n            throw errMess;\n        })\n        .then(resopnse => resopnse.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const addLeaders = leaders => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = errMess => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errMess\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n    const feedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n\n    feedback.date = new Date().toISOString();\n\n    fetch(baseUrl + 'feedback.json', {\n        method: 'POST',\n        body: JSON.stringify(feedback),\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            let error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    }, error => {\n        let errMess = new Error(error.message);\n        throw errMess;\n    })\n    .then(resopnse => resopnse.json())\n    .then(response => response ? alert(`Thanks for your feedback!`) : null)\n    .catch(error => alert('Your feedback has not submitted\\n' ,error.message));\n}","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, {Component} from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport Header from './HeaderComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Footer from './FooterComponent';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { AnimatePresence } from 'framer-motion';\nimport { actions } from 'react-redux-form';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes()); },\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n  fetchComments: () => { dispatch(fetchComments()); },\n  fetchPromos: () => { dispatch(fetchPromos()); },\n  fetchLeaders: () => { dispatch(fetchLeaders()); },\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => { dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)); }\n})\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n  render() {\n    const HomePage = () => {\n      return (\n        <Home dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter(promo => promo.featured)[0]}\n          promotionsLoading={this.props.promotions.isLoading}\n          promotionsErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n    const DishWithId = ({match}) => {\n      return (\n        <DishDetail dish={this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsLoading={this.props.comments.isLoading}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n    return (\n      <div className=\"overflow-hidden\">\n        <Header />\n        <AnimatePresence>\n          <Switch location={this.props.location}>\n            <Route path='/home' component={HomePage} />\n            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n            <Route path='/menu/:dishId' component={DishWithId} />\n            <Route exact path='/contactus' component={() => <Contact\n            postFeedback={this.props.postFeedback}\n            resetFeedbackForm={this.props.resetFeedbackForm}\n            isLoading={this.props.dishes.isLoading} />} \n              />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </AnimatePresence>\n        <Footer />\n      </div>\n    )\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true, errMess: null, dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return{...state, isLoading: false, errMess: null, dishes: action.payload};\n        \n        case ActionTypes.DISHES_LOADING:\n            return{...state, isLoading: true, errMess: null, dishes: []};\n        \n        case ActionTypes.DISHES_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, dishes: []};\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        isLoading: true, errMess: null, comments: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENT:\n            let comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\n        \n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n        isLoading: true, errMess: null, promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return{...state, isLoading: false, errMess: null, promotions: action.payload};\n    \n        case ActionTypes.PROMOS_LOADING:\n            return{...state, isLoading: true, errMess: null, promotions: []};\n        \n        case ActionTypes.PROMOS_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, promotions: []};\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true, errMess: null, leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>        \n          <Main />        \n        </BrowserRouter>\n      </Provider>\n    )\n  };\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }), \n        applyMiddleware(thunk)\n    );\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}