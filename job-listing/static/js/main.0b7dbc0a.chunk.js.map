{"version":3,"sources":["redux/jobs.js","redux/Action_Types.js","shared/baseUrl.js","redux/Action_Creators.js","components/HeaderComponent.js","components/LoadingComponent.js","components/JobsComponent.js","components/MainComponent.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Jobs","state","isLoading","errMess","jobs","action","type","payload","baseUrl","jobsLoading","jobsFailed","addJobs","Header","className","Loading","props","handleClick","event","containerFilter","document","querySelector","filters","span","createElement","innerHTML","target","addEventListener","e","role","setState","level","languages","includes","position","indexOf","splice","tools","remove","querySelectorAll","length","style","display","appendChild","clearFilters","spans","RenderJob","job","controls","useAnimation","useInView","ref","inView","useEffect","start","div","initial","animate","variants","visible","opacity","hidden","transition","transitionDuration","featured","new","src","logo","alt","company","postedAt","contract","location","onClick","map","lang","key","concat","undefined","tool","RenderFilterBox","List","filter","every","i","id","React","Component","Main","this","fetchJobs","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","store","createStore","combineReducers","applyMiddleware","thunk","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0b7dbc0a.chunk.js","sourcesContent":["import * as Action_Types from './Action_Types';\n\nexport const Jobs = (state = {\n    isLoading: true, errMess: null, jobs: []\n    }, action) => {\n\n        switch(action.type) {\n            case Action_Types.ADD_JOBS:\n                return {...state, isLoading: false, errMess: null, jobs: action.payload}\n\n            case Action_Types.JOBS_LOADING:\n                return {...state, isLoading: true, errMess: null, jobs: []}\n\n            case Action_Types.JOBS_FAILED:\n                return {...state, isLoading: false, errMess: action.payload, jobs: []}\n\n            default:\n                return state;\n        }\n}","export const ADD_JOBS = 'ADD_JOBS';\nexport const JOBS_LOADING = 'JOBS_LOADING';\nexport const JOBS_FAILED = 'JOBS_FAILED';","export const baseUrl = 'https://raw.githubusercontent.com/ahmedxgouda/job-listing-data/master/';","import * as Action_Types from './Action_Types';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const fetchJobs = () => dispatch => {\n    dispatch(jobsLoading(true));\n    fetch(baseUrl + 'db.json')\n        .then(response => {\n            if (response.ok) return response;\n            else {\n                let error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            let errMess = new Error(error.message);\n            throw errMess;\n        })\n        .then(response => response.json())\n        .then(jobs => dispatch(addJobs(jobs)))\n        .catch(error => dispatch(jobsFailed(error.message)));\n}\n\nexport const jobsLoading = () => ({\n    type: Action_Types.JOBS_LOADING\n});\n\nexport const jobsFailed = (errMess) => ({\n    type: Action_Types.JOBS_FAILED,\n    payload: errMess\n});\n\nexport const addJobs = (jobs) => ({\n    type: Action_Types.ADD_JOBS,\n    payload: jobs\n});","import React from 'react';\n\nconst Header = () => {\n    return (\n        <header>\n            <div className=\"header\">\n                <div className=\"img\"></div>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"loader\">\n            <span className=\"fas fa-spinner fa-pulse fa-3x fa-fw\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n}","import React, { useEffect } from 'react';\nimport { Loading } from './LoadingComponent'\nimport { baseUrl } from '../shared/baseUrl';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer'\n\nclass Jobs extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            role: null,\n            languages: [],\n            tools: [],\n            level: null\n        }\n    }\n\n    handleClick = (event) => {\n        const containerFilter = document.querySelector('.container-filter');\n        const filters = document.querySelector('.filter-box .filters');\n        const span = document.createElement('span');\n\n        span.innerHTML = event.target.innerHTML;\n\n        span.addEventListener('click', (e) => {\n\n            if (e.target.innerHTML === this.state.role) {\n                this.setState({role: null});\n                \n            } else if (e.target.innerHTML === this.state.level) {\n                this.setState({level: null});\n\n            } else if (this.state.languages.includes(e.target.innerHTML)) {\n                const position = this.state.languages.indexOf(e.target.innerHTML);\n                const languages = [...this.state.languages];\n                languages.splice(position, 1);\n                this.setState({languages: languages});\n\n            } else if (this.state.tools.includes(e.target.innerHTML)) {\n                const position = this.state.tools.indexOf(e.target.innerHTML);\n                const tools = [...this.state.tools];\n                tools.splice(position, 1);\n                this.setState({tools: tools});\n            }\n            span.remove();\n            const spans = document.querySelectorAll('.filter-box .filters span');\n            if (spans.length === 0) containerFilter.style.display = 'none';\n        });\n        filters.appendChild(span);\n\n        document.querySelector('.filter-box').appendChild(filters);\n        if (containerFilter.style.display === 'none') {\n            containerFilter.style.display = 'flex'; \n        }\n    }\n\n    clearFilters = () => {\n        this.setState({\n            role: null,\n            languages: [],\n            tools: [],\n            level: null\n        });\n        \n        const spans = document.querySelectorAll('.filter-box .filters span');\n\n        for (let span of spans) {\n            span.remove();\n        }\n        document.querySelector('.container-filter').style.display = 'none'\n    }\n\n    RenderJob = ({job}) => {\n\n        const controls = useAnimation();\n        const [ref, inView] = useInView();\n    \n        useEffect(() => {\n            if (inView) {\n                controls.start('visible');\n            } else {\n                controls.start('hidden');\n            }\n        }, [controls, inView])\n    \n        return (\n            <motion.div ref={ref} initial={'hidden'} animate={controls}\n            variants={{\n                visible: { opacity: 1 },\n                hidden: { opacity: 0 },\n                transition: { transitionDuration: 2}\n            }}\n            className={`box${job.featured && job.new ? ' box-border' : ''}`}>\n                <div className=\"img\">\n                    <img src={baseUrl + job.logo} alt={job.company} />\n                </div>\n                <div className=\"text\">\n                    <div className=\"info\">\n                        <div className=\"heading\">\n                            <h4>{job.company}</h4>{job.new ? (<span className=\"new\">NEW!</span>): null}{job.featured ? (<span className=\"featured\">FEATURED</span>): null}\n                        </div>\n                        <div className=\"position\">\n                            <h2>{job.position}</h2>\n                        </div>\n                        <div className=\"details\">\n                            <p>{job.postedAt} <span className=\"dot\"></span> {job.contract} <span className=\"dot\"></span> {job.location}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"filters\">\n                    <span onClick={\n                        (e) => {\n                            this.handleClick(e);\n                            this.setState({role: e.target.innerHTML});\n                        }\n                        }>{job.role}</span><span onClick={\n                            (e) => {\n                            this.handleClick(e);\n                            this.setState({level: e.target.innerHTML});\n                            }\n                        }>{job.level}</span>{job.languages.map(lang => (<span key={lang} onClick={\n                            (e) => {\n                                this.handleClick(e);\n                                this.setState({languages: this.state.languages.concat(lang)});\n                            }\n                        }>{lang}</span>))}{job.tools !== undefined ? job.tools.map(tool => (<span key={tool} onClick={\n                            (e) => {\n                                this.handleClick(e);\n                                this.setState({tools: this.state.tools.concat(tool)});\n                            }\n                        }>{tool}</span>)): null}\n                </div>\n            </motion.div>\n        );\n    }\n    \n\n    RenderFilterBox = () => {\n\n        return (\n            <div className=\"box filter-box\">\n                <div className=\"filters\"></div>\n                <div className=\"clear-btn\">\n                    <button onClick={this.clearFilters}>Clear</button>\n                </div>\n            </div>\n        );\n    }\n\n    List = () => {\n        if (this.props.isLoading) {\n            return (\n                <Loading />\n            );\n        } else if (this.props.errMess) {\n            return(\n                <p>{this.props.errMess}</p>\n            );\n        } else {\n            return (\n                <>\n                    {/* eslint-disable-next-line */}\n                    {this.props.jobs.filter(job => {\n                        if (this.state.role === null && this.state.level === null && this.state.languages.length === 0 && this.state.tools.length === 0) {\n                            return job;\n                        } else {\n                            if (this.state.level === null && this.state.languages.length === 0 && this.state.tools.length === 0) {\n                                return job.role === this.state.role;\n\n                            } else if (this.state.role === null && this.state.languages.length === 0 && this.state.tools.length === 0) {\n                                return job.level === this.state.level;\n\n                            } else if (this.state.role === null && this.state.level === null && this.state.tools.length === 0) {\n\n                                return this.state.languages.every(i => job.languages.includes(i))\n                                \n\n                            } else if (this.state.role === null && this.state.level === null && this.state.languages.length === 0) {\n                                return this.state.tools.every(i => job.tools.includes(i))\n                            } else {\n\n                                if (this.state.languages.length === 0 && this.state.tools.length === 0) {\n                                    return job.role === this.state.role && job.level === this.state.level;\n\n                                } else if (this.state.level === null && this.state.tools.length === 0) {\n                                    return job.role === this.state.role && this.state.languages.every(i => job.languages.includes(i));\n                                    \n                                } else if (this.state.role === null && this.state.tools.length === 0) {\n                                    return job.level === this.state.level && this.state.languages.every(i => job.languages.includes(i));\n                                    \n                                } else if (this.state.level === null && this.state.languages.length === 0) {\n                                    return job.role === this.state.role && this.state.tools.every(i => job.tools.includes(i));\n\n                                } else if (this.state.role === null && this.state.languages.length === 0) {\n                                    return job.level === this.state.level && this.state.tools.every(i => job.tools.includes(i));\n                                    \n                                } else if (this.state.role === null && this.state.level === null) {\n                                    return this.state.languages.every(i => job.languages.includes(i)) && this.state.tools.every(i => job.tools.includes(i));\n                                    \n                                } else {\n\n                                    if (this.state.tools.length === 0) {\n                                        return job.role === this.state.role && job.level === this.state.level && this.state.languages.every(i => job.languages.includes(i))\n\n                                    } else if (this.state.languages.length === 0) {\n                                        return job.role === this.state.role && job.level === this.state.level && this.state.tools.every(i => job.tools.includes(i));\n\n                                    } else if (this.state.level === null) {\n                                        return job.role === this.state.role && this.state.languages.every(i => job.languages.includes(i)) && this.state.tools.every(i => job.tools.includes(i));\n\n                                    } else if (this.state.role === null) {\n                                        return job.level === this.state.level && this.state.languages.every(i => job.languages.includes(i)) && this.state.tools.every(i => job.tools.includes(i));\n\n                                    }  else {\n                                        return job.role === this.state.role && job.level === this.state.level && this.state.languages.every(i => job.languages.includes(i)) && this.state.tools.every(i => job.tools.includes(i));\n                                    }\n                                }\n                            } \n                        }\n                    }).map(job => {\n                        return (\n                            <this.RenderJob key={job.id} job={job} />\n                        );\n                    })}\n                </>\n            );\n            \n        }\n    }\n    \n    render() {\n        return (\n            <>\n                <div className=\"container container-filter\" style={{display: \"none\"}}>\n                    {/* {console.log(this.state)} */}\n                    <this.RenderFilterBox />\n                </div>\n                <motion.div className=\"container\">\n                    <this.List />\n                </motion.div>\n            </>\n    );\n}\n\n}\n\nexport default Jobs;\n","import React from 'react';\nimport { fetchJobs } from '../redux/Action_Creators';\nimport { connect } from 'react-redux';\nimport Header from './HeaderComponent';\nimport Jobs from './JobsComponent';\n\nconst mapStateToProps = state => {\n    return {\n      jobs: state.jobs\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchJobs: () => {dispatch(fetchJobs());}    \n});\n\nclass Main extends React.Component {\n    componentDidMount() {\n        this.props.fetchJobs();\n    }\n\n    render() {\n        return (\n            <>\n                <Header />\n                <Jobs jobs={this.props.jobs.jobs}\n                    isLoading={this.props.jobs.isLoading}\n                    errMess={this.props.jobs.errMess} />\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React from 'react';\nimport './App.scss';\nimport { ConfigureStore } from './redux/configureStore';\nimport { Provider } from 'react-redux';\nimport Main from './components/MainComponent';\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <Provider store = {store}>\n        <Main />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Jobs } from './jobs';\nimport thunk from 'redux-thunk';\n\nexport const ConfigureStore = () => {\n    const store = createStore(combineReducers({\n        jobs: Jobs\n    }), \n        applyMiddleware(thunk)\n    );\n    \n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}